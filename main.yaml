---
- name: Setup developer machine on Ubuntu
  hosts: all
  become: yes

  vars:
    docker_users:
      - maladroitthief
    dotfiles_repo: "https://github.com/maladroitthief/dotfiles"
    dotfiles_repo_version: main
    dotfiles_repo_accept_hostkey: true
    dotfiles_repo_local_destination: "~/workspace/dotfiles"

    dotfiles_home: "~"
    dotfiles_files:
      - .ignore
      - .inputrc
      - .gitignore
      - .gitconfig
      - .tmux.conf

    aliases:
      - alias vim='nvim'
      - alias vi='nvim'
      - alias view='nvim -R'
      - alias vimdiff='nvim -d'
      - alias ga='git add'
      - alias gb='git branch'
      - alias gc='git commit'
      - alias gco='git checkout'
      - alias gd='git diff'
      - alias gdc='git diff --cached'
      - alias gr='git remote'
      - alias gs='git status'

    exports:
      - export FZF_DEFAULT_COMMAND='ag -l --path-to-ignore ~/.ignore --nocolor --hidden -g ""'

    pip_install_packages:
      - name: jmespath

  pre_tasks:
    - name: "Update repo cache"
      ansible.builtin.apt:
        update_cache: yes

    - name: "Upgrade packages"
      ansible.builtin.apt:
        upgrade: "yes"

    - name: "Remove useless packages"
      ansible.builtin.apt:
        autoclean: yes

    - name: "Remove old dependencies"
      ansible.builtin.apt:
        autoremove: yes

    - name: Install dependencies
      ansible.builtin.apt:
        pkg:
          - curl
          - apt-transport-https
          - ca-certificates
          - fzf
          - bat
          - silversearcher-ag
        state: present

    - name: Install neovim
      ansible.builtin.apt:
        name: neovim
        state: present

    - name: Create directory path for Vim-Plug
      become: no
      ansible.builtin.file:
        path: ~/.local/share/nvim/site/autoload
        state: directory

    - name: Download Vim-Plug installer
      become: no
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: ~/.local/share/nvim/site/autoload/plug.vim
        mode: 0755

    - name: Install tmux
      ansible.builtin.apt:
        name: tmux
        state: present

  roles:
    - geerlingguy.git
    - geerlingguy.dotfiles
    - geerlingguy.docker
    - geerlingguy.pip

  tasks:
    - name: Create the neovim directory if it does not exist
      become: no
      ansible.builtin.file:
        path: ~/.config/nvim
        state: directory

    - name: Setup neovim dotfiles
      include_role:
        name: geerlingguy.dotfiles
      vars:
        dotfiles_home: "~/.config/nvim"
        dotfiles_files:
          - init.vim

    - name: Download k3s installer
      get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s_installer.sh
        mode: 0755

    - name: Execute the k3s_installer.sh
      shell: /tmp/k3s_installer.sh

    - name: Remove the k3s_installer.sh
      file:
        path: /tmp/k3s_installer.sh
        state: absent

    - name: Install node
      community.general.snap:
        name: node
        state: present
        classic: yes

    - name: Install postman
      community.general.snap:
        name: postman
        state: present

    - name: Install gimp
      community.general.snap:
        name: gimp
        state: present

    - name: Install powershell
      community.general.snap:
        name: powershell
        state: present
        classic: yes

    - name: Install vscode
      community.general.snap:
        name: code
        state: present
        classic: yes

    - name: Install chrome
      ansible.builtin.apt:
        deb: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

    - name: Install spotify
      community.general.snap:
        name: spotify
        state: present

    - name: Install discord
      community.general.snap:
        name: discord
        state: present

    - name: Setup aliases in bashrc
      become: no
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        line: "{{ item }}"
        insertafter: alias.*
      loop: "{{ aliases }}"

    - name: Setup exports in bashrc
      become: no
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        line: "{{ item }}"
        insertafter: exports.*
      loop: "{{ exports }}"

    # TODO => JetBrainsMono font install

    - name: Add kubectl apt repository key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg

    - name: Add kubectl apt repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
        filename: kubectl

    - name: Install kubectl
      apt:
        name: kubectl

    - name: Get git-delta metadata
      uri:
        url: https://api.github.com/repos/dandavison/delta/releases/latest
        return_content: yes
      register: git_delta_response

    - name: Get the git delta url
      set_fact:
        git_delta_url: "{{ git_delta_response.json.assets|json_query(query) }}"
      vars:
        query: "[?name!=`null`]|[?starts_with(name, `git-delta_`) == `true`]|[?contains(name, `amd64.deb`) == `true`].browser_download_url | [0]"

    - name: Install git delta
      ansible.builtin.apt:
        deb: "{{ git_delta_url }}"

